openapi: 3.0.3
info:
  title: Order Processing Service API
  description: Order lifecycle management service for Project Zero App e-commerce platform
  version: 1.0.0
  contact:
    name: Project Zero App
    url: https://github.com/project-zero-app

servers:
  - url: http://localhost:8008
    description: Development server

paths:
  # Order Management Endpoints
  /orders:
    post:
      summary: Create new order from cart
      description: Convert cart items to order, calculate totals, and create order record
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
        '422':
          description: Cart validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Get user order history
      description: Retrieve all orders for authenticated user
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by order status
          schema:
            $ref: '#/components/schemas/OrderStatus'
        - name: limit
          in: query
          description: Maximum number of orders to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of orders to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Order history retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderHistoryResponse'
        '401':
          description: Authentication required

  /orders/{orderId}:
    get:
      summary: Get order details
      description: Retrieve complete order information including items and shipping
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
      responses:
        '200':
          description: Order details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailResponse'
        '401':
          description: Authentication required
        '403':
          description: Access denied - not order owner
        '404':
          description: Order not found

    patch:
      summary: Modify order
      description: Update order details (status-dependent restrictions apply)
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyOrderRequest'
      responses:
        '200':
          description: Order modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid modification request
        '401':
          description: Authentication required
        '403':
          description: Modification not allowed for current status
        '404':
          description: Order not found

  /orders/{orderId}/cancel:
    post:
      summary: Cancel order
      description: Cancel order if status allows cancellation
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Cancellation reason
                  maxLength: 500
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Cancellation not allowed
        '401':
          description: Authentication required
        '404':
          description: Order not found

  /orders/{orderId}/status:
    put:
      summary: Update order status
      description: Update order status (admin privileges required)
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusRequest'
      responses:
        '200':
          description: Status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid status transition
        '401':
          description: Authentication required
        '403':
          description: Admin privileges required
        '404':
          description: Order not found

  /orders/{orderId}/status-history:
    get:
      summary: Get order status history
      description: Retrieve complete status change history for an order
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
      responses:
        '200':
          description: Status history retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatusHistoryResponse'
        '401':
          description: Authentication required
        '403':
          description: Access denied - not order owner
        '404':
          description: Order not found

  # Admin Endpoints
  /admin/orders:
    get:
      summary: Get all orders (admin)
      description: Retrieve orders across all users with admin privileges
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by order status
          schema:
            $ref: '#/components/schemas/OrderStatus'
        - name: userId
          in: query
          description: Filter by user ID
          schema:
            type: integer
        - name: limit
          in: query
          description: Maximum number of orders
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          description: Number of orders to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Orders retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOrderHistoryResponse'
        '401':
          description: Authentication required
        '403':
          description: Admin privileges required

  /admin/orders/{orderId}/status:
    put:
      summary: Update order status (admin)
      description: Update order status for fulfillment tracking
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusRequest'
      responses:
        '200':
          description: Status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid status transition
        '401':
          description: Authentication required
        '403':
          description: Admin privileges required
        '404':
          description: Order not found

  # Shipping Endpoints
  /shipping/calculate:
    post:
      summary: Calculate shipping cost
      description: Calculate shipping cost for items and address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingCalculateRequest'
      responses:
        '200':
          description: Shipping cost calculated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingCalculateResponse'
        '400':
          description: Invalid request data

  /shipping/rates:
    get:
      summary: Get available shipping rates
      description: List available shipping options and rates
      responses:
        '200':
          description: Shipping rates retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingRatesResponse'

  # Health Endpoints
  /health:
    get:
      summary: Health check
      description: Basic service health check
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service unhealthy

  /health/ready:
    get:
      summary: Readiness check
      description: Service readiness check including dependencies
      responses:
        '200':
          description: Service is ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service not ready

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # Request Schemas
    CreateOrderRequest:
      type: object
      required:
        - shipping_address
      properties:
        shipping_address:
          $ref: '#/components/schemas/ShippingAddressInput'
        notes:
          type: string
          description: Order notes
          maxLength: 500

    ModifyOrderRequest:
      type: object
      properties:
        shipping_address:
          $ref: '#/components/schemas/ShippingAddressInput'
        notes:
          type: string
          maxLength: 500

    UpdateStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/OrderStatus'
        notes:
          type: string
          description: Status update notes
          maxLength: 500

    ShippingCalculateRequest:
      type: object
      required:
        - items
        - address
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ShippingItem'
        address:
          $ref: '#/components/schemas/ShippingAddressInput'

    ShippingItem:
      type: object
      required:
        - weight
        - quantity
      properties:
        weight:
          type: number
          format: float
          minimum: 0
        quantity:
          type: integer
          minimum: 1

    ShippingAddressInput:
      type: object
      required:
        - recipient_name
        - address_line_1
        - city
        - state_province
        - postal_code
        - country
      properties:
        recipient_name:
          type: string
          minLength: 1
          maxLength: 100
        company:
          type: string
          maxLength: 100
        address_line_1:
          type: string
          minLength: 1
          maxLength: 200
        address_line_2:
          type: string
          maxLength: 200
        city:
          type: string
          minLength: 1
          maxLength: 100
        state_province:
          type: string
          minLength: 1
          maxLength: 100
        postal_code:
          type: string
          minLength: 1
          maxLength: 20
        country:
          type: string
          pattern: '^[A-Z]{2}$'
          description: ISO 3166-1 alpha-2 country code
        phone:
          type: string
          maxLength: 20
        delivery_instructions:
          type: string
          maxLength: 500

    # Response Schemas
    OrderResponse:
      type: object
      properties:
        id:
          type: integer
        order_number:
          type: string
        user_id:
          type: integer
        status:
          $ref: '#/components/schemas/OrderStatus'
        subtotal:
          type: number
          format: float
        tax_rate:
          type: number
          format: float
        tax_amount:
          type: number
          format: float
        shipping_cost:
          type: number
          format: float
        total:
          type: number
          format: float
        currency:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        modification_count:
          type: integer

    OrderDetailResponse:
      allOf:
        - $ref: '#/components/schemas/OrderResponse'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OrderItem'
            shipping_address:
              $ref: '#/components/schemas/ShippingAddress'

    OrderHistoryResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer

    AdminOrderHistoryResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/OrderResponse'
              - type: object
                properties:
                  user_email:
                    type: string
                    description: Customer email for admin view
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer

    OrderItem:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
        product_name:
          type: string
        product_sku:
          type: string
        quantity:
          type: integer
        unit_price:
          type: number
          format: float
        total_price:
          type: number
          format: float
        weight:
          type: number
          format: float

    ShippingAddress:
      allOf:
        - $ref: '#/components/schemas/ShippingAddressInput'
        - type: object
          properties:
            id:
              type: integer

    ShippingCalculateResponse:
      type: object
      properties:
        shipping_cost:
          type: number
          format: float
        shipping_tier:
          type: string
        total_weight:
          type: number
          format: float
        zone:
          type: string

    ShippingRatesResponse:
      type: object
      properties:
        rates:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              max_weight:
                type: number
                format: float
              base_rate:
                type: number
                format: float

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        dependencies:
          type: object
          additionalProperties:
            type: string

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
        timestamp:
          type: string
          format: date-time

    OrderStatus:
      type: string
      enum:
        - PENDING
        - CONFIRMED
        - PROCESSING
        - SHIPPED
        - DELIVERED
        - CANCELLED

    OrderStatusHistoryResponse:
      type: object
      properties:
        order_id:
          type: integer
        status_history:
          type: array
          items:
            type: object
            properties:
              status:
                $ref: '#/components/schemas/OrderStatus'
              timestamp:
                type: string
                format: date-time
              notes:
                type: string
              updated_by:
                type: string
                description: Email of user who made the change

  examples:
    CreateOrderExample:
      value:
        shipping_address:
          recipient_name: "John Doe"
          address_line_1: "123 Main Street"
          address_line_2: "Apt 4B"
          city: "San Francisco"
          state_province: "CA"
          postal_code: "94105"
          country: "US"
          phone: "+1-555-123-4567"
        notes: "Please leave at front door"

    OrderResponseExample:
      value:
        id: 1001
        order_number: "ORD-2025-001234"
        user_id: 42
        status: "PENDING"
        subtotal: 89.97
        tax_rate: 0.085
        tax_amount: 7.65
        shipping_cost: 8.99
        total: 106.61
        currency: "USD"
        created_at: "2025-09-25T10:30:00Z"
        updated_at: "2025-09-25T10:30:00Z"
        modification_count: 0