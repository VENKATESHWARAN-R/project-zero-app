openapi: 3.0.3
info:
  title: Integration Testing API
  version: 1.0.0
  description: API contract for integration testing endpoints and test execution

servers:
  - url: http://localhost:8000
    description: Local development via API Gateway

paths:
  /health:
    get:
      summary: System health check
      description: Verify that the integration testing system is operational
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                required: [status, timestamp]

  /test/execute:
    post:
      summary: Execute integration test suite
      description: Run a complete integration test suite against all services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                suite_name:
                  type: string
                  description: Name of test suite to execute
                  example: "full-integration"
                parallel:
                  type: boolean
                  description: Whether to run tests in parallel where possible
                  default: true
                timeout_seconds:
                  type: integer
                  description: Maximum execution time for entire suite
                  minimum: 60
                  maximum: 300
                  default: 180
                environment:
                  type: string
                  description: Target environment configuration
                  enum: [local, docker, staging]
                  default: docker
              required: [suite_name]
      responses:
        '200':
          description: Test execution completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestExecutionResult'
        '400':
          description: Invalid test configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Test execution failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /test/status/{session_id}:
    get:
      summary: Get test execution status
      description: Retrieve current status of a running test session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the test session
      responses:
        '200':
          description: Test status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestStatus'
        '404':
          description: Test session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /test/results/{session_id}:
    get:
      summary: Get detailed test results
      description: Retrieve complete results for a completed test session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the test session
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, markdown, html]
            default: json
          description: Format for test results
      responses:
        '200':
          description: Test results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestExecutionResult'
            text/markdown:
              schema:
                type: string
            text/html:
              schema:
                type: string
        '404':
          description: Test session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /test/suites:
    get:
      summary: List available test suites
      description: Get list of all available integration test suites
      responses:
        '200':
          description: Test suites retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  suites:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestSuite'

  /test/config/validate:
    post:
      summary: Validate test configuration
      description: Validate test configuration before execution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestConfiguration'
      responses:
        '200':
          description: Configuration is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Configuration is valid"
        '400':
          description: Configuration validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["Invalid service name: invalid-service", "Timeout too low: minimum 60 seconds"]

components:
  schemas:
    TestSuite:
      type: object
      properties:
        name:
          type: string
          description: Unique identifier for the test suite
        description:
          type: string
          description: Human-readable description
        test_count:
          type: integer
          description: Number of tests in this suite
        estimated_duration:
          type: integer
          description: Estimated execution time in seconds
        prerequisites:
          type: array
          items:
            type: string
          description: Required services/conditions
        parallel_safe:
          type: boolean
          description: Whether suite can run in parallel
      required: [name, description, test_count]

    TestConfiguration:
      type: object
      properties:
        suite_name:
          type: string
        parallel:
          type: boolean
        timeout_seconds:
          type: integer
        environment:
          type: string
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceConfiguration'
      required: [suite_name]

    ServiceConfiguration:
      type: object
      properties:
        service_name:
          type: string
        base_url:
          type: string
          format: uri
        requires_auth:
          type: boolean
        startup_wait_seconds:
          type: integer
        dependencies:
          type: array
          items:
            type: string
      required: [service_name, base_url]

    TestExecutionResult:
      type: object
      properties:
        session_id:
          type: string
          description: Unique identifier for this test session
        start_timestamp:
          type: string
          format: date-time
        end_timestamp:
          type: string
          format: date-time
        duration_seconds:
          type: integer
          description: Total execution time
        environment:
          type: string
          description: Environment where tests were executed
        overall_status:
          type: string
          enum: [passed, failed, partial]
        summary:
          type: object
          properties:
            total_tests:
              type: integer
            passed_tests:
              type: integer
            failed_tests:
              type: integer
            skipped_tests:
              type: integer
            success_rate:
              type: number
              format: float
          required: [total_tests, passed_tests, failed_tests, skipped_tests, success_rate]
        test_results:
          type: array
          items:
            $ref: '#/components/schemas/TestResult'
        performance_summary:
          $ref: '#/components/schemas/PerformanceSummary'
        failures:
          type: array
          items:
            $ref: '#/components/schemas/TestFailure'
      required: [session_id, start_timestamp, overall_status, summary]

    TestResult:
      type: object
      properties:
        test_id:
          type: string
        suite_name:
          type: string
        test_name:
          type: string
        status:
          type: string
          enum: [passed, failed, skipped, error]
        duration_ms:
          type: integer
        error_message:
          type: string
        response_status:
          type: integer
        retry_count:
          type: integer
      required: [test_id, suite_name, test_name, status, duration_ms]

    TestStatus:
      type: object
      properties:
        session_id:
          type: string
        status:
          type: string
          enum: [running, completed, failed, cancelled]
        progress:
          type: object
          properties:
            current_suite:
              type: string
            completed_tests:
              type: integer
            total_tests:
              type: integer
            percentage:
              type: number
              format: float
        estimated_completion:
          type: string
          format: date-time
      required: [session_id, status, progress]

    PerformanceSummary:
      type: object
      properties:
        avg_response_time_ms:
          type: number
          format: float
        min_response_time_ms:
          type: integer
        max_response_time_ms:
          type: integer
        slowest_endpoint:
          type: string
        fastest_endpoint:
          type: string
        total_requests:
          type: integer
      required: [avg_response_time_ms, total_requests]

    TestFailure:
      type: object
      properties:
        test_id:
          type: string
        test_name:
          type: string
        error_type:
          type: string
          enum: [connection_error, timeout, authentication_error, validation_error, server_error]
        error_message:
          type: string
        remediation:
          type: string
          description: Suggested fix for the failure
        service_name:
          type: string
      required: [test_id, test_name, error_type, error_message]

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error type identifier
        message:
          type: string
          description: Human-readable error message
        details:
          type: string
          description: Additional error details
        timestamp:
          type: string
          format: date-time
      required: [error, message, timestamp]