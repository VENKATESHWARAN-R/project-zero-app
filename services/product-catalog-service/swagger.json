{
  "openapi": "3.1.0",
  "info": {
    "title": "Product Catalog Service",
    "description": "Product catalog microservice for Project Zero App e-commerce platform",
    "version": "1.0.0"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health check",
        "description": "Basic health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Readiness check",
        "description": "Readiness check including database connectivity",
        "operationId": "readiness_check_health_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "List products with pagination",
        "description": "Retrieve paginated list of active products",
        "operationId": "list_products_products_get",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of products to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of products to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of products to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of products to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create new product (Admin)",
        "description": "Create a new product in the catalog",
        "operationId": "create_product_products_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/products/search": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Search products",
        "description": "Search products by name or description with pagination",
        "operationId": "search_products_products_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "Search query",
              "title": "Q"
            },
            "description": "Search query"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of products to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of products to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of products to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of products to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by ID",
        "description": "Retrieve detailed information about a specific product",
        "operationId": "get_product_products__product_id__get",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update product (Admin)",
        "description": "Update an existing product",
        "operationId": "update_product_products__product_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/products/category/{category}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Filter products by category",
        "description": "Retrieve products filtered by category with pagination",
        "operationId": "get_products_by_category_products_category__category__get",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CategoryEnum"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of products to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of products to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of products to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of products to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoryEnum": {
        "type": "string",
        "enum": [
          "electronics",
          "clothing",
          "books",
          "home_goods"
        ],
        "title": "CategoryEnum",
        "description": "Product category enumeration for API."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Health status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Check timestamp"
          },
          "database": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database",
            "description": "Database connection status"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp"
        ],
        "title": "HealthResponse",
        "description": "Schema for health check response."
      },
      "ProductCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 1,
            "title": "Description",
            "description": "Product description"
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Price",
            "description": "Product price"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryEnum",
            "description": "Product category"
          },
          "image_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Image Url",
            "description": "URL to product image"
          },
          "stock_quantity": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Stock Quantity",
            "description": "Initial stock quantity"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "price",
          "category",
          "image_url",
          "stock_quantity"
        ],
        "title": "ProductCreate",
        "description": "Schema for creating a new product."
      },
      "ProductListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of products"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of products matching criteria"
          },
          "offset": {
            "type": "integer",
            "title": "Offset",
            "description": "Number of items skipped"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Maximum items in response"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether more items are available"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "offset",
          "limit",
          "has_more"
        ],
        "title": "ProductListResponse",
        "description": "Schema for paginated product list response."
      },
      "ProductResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Unique product identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "title": "Price",
            "description": "Product price"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryEnum",
            "description": "Product category"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "URL to product image"
          },
          "stock_quantity": {
            "type": "integer",
            "title": "Stock Quantity",
            "description": "Available stock quantity"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether product is active/visible"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Product creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "price",
          "category",
          "image_url",
          "stock_quantity",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "ProductResponse",
        "description": "Schema for product response."
      },
      "ProductUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Product name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Product description"
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price",
            "description": "Product price"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CategoryEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "Product category"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "URL to product image"
          },
          "stock_quantity": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Stock Quantity",
            "description": "Stock quantity"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether product is active/visible"
          }
        },
        "type": "object",
        "title": "ProductUpdate",
        "description": "Schema for updating an existing product."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
