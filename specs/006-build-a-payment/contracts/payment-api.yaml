openapi: 3.0.3
info:
  title: Payment Processing Service API
  description: Mock payment processing service for Project Zero App e-commerce platform
  version: 1.0.0
  contact:
    name: Project Zero Team
    email: team@projectzero.dev

servers:
  - url: http://localhost:8009
    description: Local development server
  - url: https://payment-service.projectzero.dev
    description: Production server

security:
  - BearerAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns service health status
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /health/ready:
    get:
      summary: Readiness check endpoint
      description: Returns service readiness status
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessResponse'

  /api/v1/payments:
    post:
      summary: Process payment
      description: Process a payment for an order
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '201':
          description: Payment initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Invalid payment request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Payment already exists for order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Get payment history
      description: Retrieve payment history for authenticated user
      tags:
        - Payments
      parameters:
        - name: limit
          in: query
          description: Maximum number of payments to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of payments to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: status
          in: query
          description: Filter by payment status
          schema:
            $ref: '#/components/schemas/PaymentStatus'
      responses:
        '200':
          description: Payment history retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentHistoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/payments/{payment_id}:
    get:
      summary: Get payment details
      description: Retrieve details of a specific payment
      tags:
        - Payments
      parameters:
        - name: payment_id
          in: path
          required: true
          description: Payment transaction ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Payment details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/payments/{payment_id}/status:
    get:
      summary: Get payment status
      description: Retrieve current status of a payment
      tags:
        - Payments
      parameters:
        - name: payment_id
          in: path
          required: true
          description: Payment transaction ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Payment status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/payment-methods:
    get:
      summary: Get user payment methods
      description: Retrieve all payment methods for authenticated user
      tags:
        - Payment Methods
      responses:
        '200':
          description: Payment methods retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Add payment method
      description: Add a new payment method for authenticated user
      tags:
        - Payment Methods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
      responses:
        '201':
          description: Payment method added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
        '400':
          description: Invalid payment method data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/payment-methods/{method_id}:
    delete:
      summary: Remove payment method
      description: Remove a payment method for authenticated user
      tags:
        - Payment Methods
      parameters:
        - name: method_id
          in: path
          required: true
          description: Payment method ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payment method removed successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Payment method not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/webhooks/payment:
    post:
      summary: Payment webhook endpoint
      description: Receive simulated payment gateway webhooks
      tags:
        - Webhooks
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPayload'
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: Invalid webhook payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    PaymentRequest:
      type: object
      required:
        - order_id
        - payment_method_id
        - amount
      properties:
        order_id:
          type: string
          format: uuid
          description: Order ID to process payment for
        payment_method_id:
          type: string
          format: uuid
          description: Payment method to use
        amount:
          type: integer
          minimum: 1
          description: Payment amount in cents
        currency:
          type: string
          default: USD
          description: Payment currency code
        description:
          type: string
          maxLength: 255
          description: Payment description

    PaymentResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Payment transaction ID
        order_id:
          type: string
          format: uuid
          description: Associated order ID
        user_id:
          type: string
          format: uuid
          description: User who made the payment
        payment_method_id:
          type: string
          format: uuid
          description: Payment method used
        amount:
          type: integer
          description: Payment amount in cents
        currency:
          type: string
          description: Payment currency code
        status:
          $ref: '#/components/schemas/PaymentStatus'
        gateway_transaction_id:
          type: string
          description: Mock gateway transaction ID
        failure_reason:
          type: string
          nullable: true
          description: Reason for payment failure
        created_at:
          type: string
          format: date-time
          description: Payment creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
        processed_at:
          type: string
          format: date-time
          nullable: true
          description: Payment processing completion timestamp

    PaymentStatus:
      type: string
      enum:
        - PENDING
        - PROCESSING
        - COMPLETED
        - FAILED
        - CANCELLED
        - REFUNDED

    PaymentStatusResponse:
      type: object
      properties:
        payment_id:
          type: string
          format: uuid
          description: Payment transaction ID
        status:
          $ref: '#/components/schemas/PaymentStatus'
        updated_at:
          type: string
          format: date-time
          description: Status update timestamp

    PaymentHistoryResponse:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentResponse'
        total:
          type: integer
          description: Total number of payments
        limit:
          type: integer
          description: Number of payments per page
        offset:
          type: integer
          description: Number of payments skipped

    PaymentMethodRequest:
      type: object
      required:
        - type
        - display_name
        - payment_details
      properties:
        type:
          $ref: '#/components/schemas/PaymentMethodType'
        display_name:
          type: string
          maxLength: 100
          description: User-friendly name for payment method
        payment_details:
          oneOf:
            - $ref: '#/components/schemas/CreditCardDetails'
            - $ref: '#/components/schemas/PayPalDetails'
        is_default:
          type: boolean
          default: false
          description: Set as default payment method

    PaymentMethodResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Payment method ID
        user_id:
          type: string
          format: uuid
          description: Owner user ID
        type:
          $ref: '#/components/schemas/PaymentMethodType'
        display_name:
          type: string
          description: User-friendly name
        masked_details:
          type: object
          description: Masked payment details for display
        is_default:
          type: boolean
          description: Whether this is the default method
        is_active:
          type: boolean
          description: Whether method is available for use
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: Expiration date for cards
        created_at:
          type: string
          format: date-time
          description: Creation timestamp

    PaymentMethodsResponse:
      type: object
      properties:
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodResponse'

    PaymentMethodType:
      type: string
      enum:
        - CREDIT_CARD
        - DEBIT_CARD
        - PAYPAL

    CreditCardDetails:
      type: object
      required:
        - card_number
        - exp_month
        - exp_year
        - cvv
      properties:
        card_number:
          type: string
          pattern: '^[0-9]{13,19}$'
          description: Credit card number
        exp_month:
          type: integer
          minimum: 1
          maximum: 12
          description: Expiration month
        exp_year:
          type: integer
          minimum: 2024
          description: Expiration year
        cvv:
          type: string
          pattern: '^[0-9]{3,4}$'
          description: Card verification value
        cardholder_name:
          type: string
          maxLength: 100
          description: Name on card

    PayPalDetails:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          description: PayPal account email

    WebhookPayload:
      type: object
      required:
        - event_type
        - payment_id
        - data
      properties:
        event_type:
          type: string
          enum:
            - PAYMENT_INITIATED
            - PAYMENT_COMPLETED
            - PAYMENT_FAILED
            - PAYMENT_CANCELLED
        payment_id:
          type: string
          format: uuid
          description: Payment transaction ID
        data:
          type: object
          description: Event-specific data
        timestamp:
          type: string
          format: date-time
          description: Event timestamp

    WebhookResponse:
      type: object
      properties:
        received:
          type: boolean
          description: Whether webhook was received successfully
        processed_at:
          type: string
          format: date-time
          description: Processing timestamp

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        uptime:
          type: number
          description: Service uptime in seconds

    ReadinessResponse:
      type: object
      properties:
        ready:
          type: boolean
        checks:
          type: object
          properties:
            database:
              type: string
              enum: [ready, not_ready]
            auth_service:
              type: string
              enum: [ready, not_ready]
            order_service:
              type: string
              enum: [ready, not_ready]

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
